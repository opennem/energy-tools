{"version":3,"file":"index.min.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable arrow-body-style */\n/**\n * OpenNEM Energy Functions\n *\n */\n\ninterface Point {\n  x: number\n  y: number\n}\n\n/**\n * Calculate trapezoid area between two points\n *\n * @param p1 first point\n * @param p2 second point\n */\nexport function trapezoid(p1: Point, p2: Point): number {\n  const width = p2.y - p1.y\n\n  const ret = p1.x * width + ((p2.x - p1.x) * width) / 2\n\n  return ret\n}\n\n/**\n * Calculate energy sum\n *\n * @param series power values\n * @param bucket_size_minutes size of the bucket in minutes\n */\nexport function energy_sum(\n  series: number[],\n  bucket_size_minutes: number,\n): number {\n  const number_intervals = series.length\n  const interval_size = bucket_size_minutes / number_intervals\n\n  const y_series = Array.from(\n    new Array(number_intervals),\n    (element, index) => index * interval_size,\n  )\n\n  const series_points: Point[] = series\n    .map((x, i) => ({\n      x,\n      y: y_series[i],\n    }))\n    .sort((p1, p2) => (p1.y < p2.y ? -1 : 1))\n\n  let area = 0.0,\n    p1,\n    p2\n\n  if (number_intervals > 2) {\n    for (let i = 0; i < number_intervals - 1; i++) {\n      p1 = series_points[i]\n      p2 = series_points[i + 1]\n\n      // @NOTE eventually support variable interval sizes\n      area += trapezoid(p1, p2)\n    }\n  }\n\n  // convert back to hours\n  area = area / 60\n\n  return area\n}\n"],"names":["trapezoid","p1","p2","width","y","x","energy_sum","series","bucket_size_minutes","number_intervals","length","interval_size","y_series","Array","from","element","index","series_points","map","i","sort","area"],"mappings":";;;;;;WAiBgBA,UAAUC,EAAWC,GACnC,IAAMC,EAAQD,EAAGE,EAAIH,EAAGG,EAIxB,OAFYH,EAAGI,EAAIF,GAAUD,EAAGG,EAAIJ,EAAGI,GAAKF,EAAS,WAWvCG,WACdC,EACAC,GAEA,IAAMC,EAAmBF,EAAOG,OAC1BC,EAAgBH,EAAsBC,EAEtCG,EAAWC,MAAMC,KACrB,IAAID,MAAMJ,IACV,SAACM,EAASC,GAAU,OAAAA,EAAQL,KAGxBM,EAAyBV,EAC5BW,KAAI,SAACb,EAAGc,GAAM,OAAA,CACbd,IACAD,EAAGQ,EAASO,OAEbC,MAAK,SAACnB,EAAIC,GAAO,OAACD,EAAGG,EAAIF,EAAGE,GAAK,EAAI,KAEpCiB,EAAO,EAIX,GAAIZ,EAAmB,EACrB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAmB,EAAGU,IAKxCE,GAAQrB,UAJHiB,EAAcE,GACdF,EAAcE,EAAI,IAU3B,OAFAE,GAAc;;;;;;;;;;;"}